@model MealPlanner.Models.Meal

@{
    ViewBag.Title = "Meals - Edit";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Ingredients, 6, 1, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Directions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Directions, 6, 1, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Directions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="categoryGroup">Categories</label>
            <div class="col-md-10" data-toggle="buttons" name="categoryGroup">
                @{var isabreakfast = Model.IsBreakfast ? "active" : null;}
                <label class="btn btn-primary @isabreakfast">
                    @Html.EditorFor(model => Model.IsBreakfast, new { htmlAttributes = new { @class = "form-control" } }) Breakfast
                </label>
                @{var isalunch = Model.IsLunch ? "active" : null;}
                <label class="btn btn-primary @isalunch">
                    @Html.EditorFor(model => Model.IsLunch, new { htmlAttributes = new { @class = "form-control" } }) Lunch
                </label>
                @{var isadinner = Model.IsDinner ? "active" : null;}
                <label class="btn btn-primary @isadinner">
                    @Html.EditorFor(model => Model.IsDinner, new { htmlAttributes = new { @class = "form-control" } }) Dinner
                </label>
                @{var isaside = Model.IsSide ? "active" : null;}
                <label class="btn btn-primary @isaside">
                    @Html.EditorFor(model => Model.IsSide, new { htmlAttributes = new { @class = "form-control" } }) Side
                </label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Go to meal List", "Index", null, new { @class = "btn btn-info" })
</div>
